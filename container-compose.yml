version: "2.0"

services:
  anitya-web:
    image: anitya-base
    build:
      context: .
      dockerfile: Containerfile.dev
      args:
        FEDORA_VERSION: 40
    container_name: "anitya-web"
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - .:/app:z
    restart: unless-stopped
    environment:
      - ANITYA_WEB_CONFIG=anitya.toml
      - FLASK_APP=anitya.wsgi
      - FLASK_DEBUG=1
      - START_COMMAND=flask run -h 0.0.0.0
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5000" ]
      interval: 3s
      timeout: 3s
      retries: 30
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_started

  anitya-check-service:
    image: anitya-base
    container_name: "anitya-check-service"
    volumes:
      - .:/app:z
    restart: unless-stopped
    environment:
      - ANITYA_WEB_CONFIG=anitya.toml
      - START_COMMAND=check_service
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_started

  rabbitmq:
    image: docker.io/library/rabbitmq:3.8.16-management-alpine
    container_name: "rabbitmq"
    restart: unless-stopped
    ports:
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 3s
      timeout: 3s
      retries: 30
    environment:
      - RABBITMQ_DEFAULT_USER=anitya
      - RABBITMQ_DEFAULT_PASS=anitya

  postgres:
    image: docker.io/library/postgres:13.4
    container_name: "postgres"
    user: postgres
    volumes:
      - .container/dump:/dump:z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 3s
      retries: 30
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=anypasswordworkslocally
      - POSTGRES_DB=anitya

